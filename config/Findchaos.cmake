IF(CMAKE_INSTALL_PREFIX)
  set(PREFIX ${CMAKE_INSTALL_PREFIX})
ELSE()
  set(PREFIX ${CMAKE_CURRENT_LIST_DIR})
ENDIF()

set(chaos_INCLUDE_DIRS ${PREFIX}/include)
FILE(GLOB boost_libs ${PREFIX}/lib/libboost*.a)
ADD_DEFINITIONS(-DCHAOS -fPIC)
set(chaos_LIBRARIES chaos_cutoolkit chaos_common)
set(chaos_client_LIBRARIES chaos_metadata_service_client)
SET(CMAKE_INSTALL_RPATH "${PREFIX}/lib")
link_directories(${PREFIX}/lib)
SET(FrameworkLib ${chaos_LIBRARIES} ${boost_libs} pthread dl)
include(${PREFIX}/CMakeMacroUtils.txt)
IF(CHAOS_STATIC)
  MESG("Enabling Static compilation")
  SET(BUILD_FORCE_STATIC 1)
  SET(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
  ADD_DEFINITIONS(-DCHAOS_STATIC)
  SET(CHAOS_LINKER_FLAGS "-static")
  SET(CMAKE_EXE_LINKER_FLAGS "-static")
  SET(BUILD_SHARED_LIBRARIES OFF)
  SET(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS)
  SET(CMAKE_SHARED_LIBRARY_LINK_CC_FLAGS)
  set(CMAKE_EXE_LINK_DYNAMIC_C_FLAGS)       # remove -Wl,-Bdynamic
  set(CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS)
#    SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES LINK_SEARCH_END_STATIC 1)
ELSE()
  SET(BUILD_SHARED_LIBRARIES ON)
ENDIF()

IF ( CHAOS_SANITIZER)
  IF(DEFINED PROJECT_NAME)
    SET(FrameworkLib asan ${FrameworkLib})

    IF( ${CHAOS_SANITIZER} STREQUAL ${PROJECT_NAME} )
      MESG("ENABLING SANITIZER FOR PROJECT ${PROJECT_NAME}")

      set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -fsanitize=address")
      set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g -fsanitize=address")
      set (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fsanitize=address")

    ENDIF()

  ENDIF()
ENDIF()

